---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: roleupdaters.role.updater.compute.io
spec:
  group: role.updater.compute.io
  names:
    kind: RoleUpdater
    listKind: RoleUpdaterList
    plural: roleupdaters
    singular: roleupdater
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec is a list of the desired state of the RoleUpdater. It has a single field, configMapRef, which is a reference to a configMap
              in the cluster that contains the script that will be run every single clusterVersion change.
            properties:
              configMapRef:
                description: |-
                  ConfigMapRef is a field that contains the name and the namespace of the configMap that contains the script to be run
                  when the clusterVersion changes.
                properties:
                  name:
                    description: |-
                      Name is the name of the configMap that contains the script to be run
                      when the clusterVersion changes.
                    type: string
                  namespace:
                    description: |-
                      Namespace is the name of the configMap that contains the script to be run when the clusterVersion changes.
                      If left empty, it will default to the namespace of the RoleUpdater.
                    type: string
                required:
                - name
                type: object
              forceRun:
                description: |-
                  ForceRun is an optional boolean field that, when set to true, forces the operator to run the script inside the configMap
                  specified in .spec.configMapRef during the next reconciliation loop, regardless of whether the clusterVersion changed or not.
                type: boolean
            required:
            - configMapRef
            type: object
          status:
            description: Status defines the observed state of RoleUpdater.
            properties:
              clusterVersion:
                description: The current clusterVersion fetched from the ClusterVersion
                  resource.
                type: string
              configMapPresent:
                description: A boolean value that indicates whether the configMap
                  specified in spec.configMapRef is present in the cluster.
                type: boolean
              lastCheckTime:
                description: The last time the operator checked the clusterVersion
                  resource.
                type: string
              message:
                description: An informative message indicating the status of the RoleUpdater.
                type: string
              status:
                description: A short string value indicating the status of the RoleUpdater.
                type: string
            required:
            - configMapPresent
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
